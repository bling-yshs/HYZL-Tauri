name: Release
run-name: "✨ 发布正式版: (${{ github.event.head_commit.message }})"
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: Build release
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        run: |
          pnpm install
          pnpm tauri-build

      - name: Upload build to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: msi
          path: ./src-tauri/target/release/bundle/msi/*

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }} # This only works if your workflow triggers on new tags.
          releaseName: "App Name v__VERSION__" # tauri-action replaces \_\_VERSION\_\_ with the app version.
          releaseBody: "See the assets to download and install this version."
          releaseDraft: true
          prerelease: false

      - name: Run update.cjs
        run: |
          echo $(git log)
          $version="${{ github.ref_name }}".Substring(1)
          echo "version: ${version}"
          $last_tag=$(git describe --abbrev=0 --tags HEAD^)
            echo "last_tag: ${last_tag}"
          $notes_command="git log --pretty=format:'%s' ${last_tag}...HEAD"
            echo "notes_command: ${notes_command}"
          $notes="更新内容: $(Invoke-Expression ${notes_command})"
            echo "notes: ${notes}"
          $sig=$(cat ./src-tauri/target/release/bundle/msi/*.sig)
            echo "sig: ${sig}"
          $url="https://github.com/bling-yshs/HYZL-Tauri/releases/download/v${version}/HYZL-Tauri_${version}_x64_zh-CN.msi.zip"
          cd ./update
          node update.cjs "${version}" "${notes}" "${sig}" "${url}"
          cd ..

      - name: gist-sync
        uses: exuanbo/actions-deploy-gist@v1
        with:
          token: ${{ secrets.GIST_TOKEN }}
          gist_id: 3f562fdf79a2dbb4b6af75742aca4818
          file_path: ./update/update.json